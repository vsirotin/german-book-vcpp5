{\rtf1\ansi \deff9\deflang1033{\fonttbl{\f3\froman\fcharset0\fprq2 Courier{\*\falt Courier New};}{\f9\fswiss\fcharset0\fprq2 Helvetica;}{\f11\fmodern\fcharset0\fprq1 Courier New;}}{\colortbl;\red0\green0\blue0;
\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;
\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar \f9\fs20\lang1031 \snext0 Normal;}{\s1\sb240\sa60\keepn\widctlpar \b\f9\fs28\lang1031\kerning28 \sbasedon0\snext0 heading 1;}{
\s2\sb240\sa60\keepn\widctlpar \b\i\f9\fs20\lang1031 \sbasedon0\snext0 heading 2;}{\s3\sb240\sa60\keepn\widctlpar \f9\fs20\lang1031 \sbasedon0\snext0 heading 3;}{\s4\sb240\sa60\keepn\widctlpar \b\f9\fs20\lang1031 \sbasedon0\snext0 heading 4;}{
\s5\sb240\sa60\widctlpar \f9\fs22\lang1031 \sbasedon0\snext0 heading 5;}{\s6\sb240\sa60\widctlpar \i\f9\fs22\lang1031 \sbasedon0\snext0 heading 6;}{\s7\sb240\sa60\widctlpar \f9\fs20\lang1031 \sbasedon0\snext0 heading 7;}{\s8\sb240\sa60\widctlpar 
\i\f9\fs20\lang1031 \sbasedon0\snext0 heading 8;}{\s9\sb240\sa60\widctlpar \b\i\f9\fs18\lang1031 \sbasedon0\snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive\b\ul\nosupersub \sbasedon10 Stichwort;}{\s16\widctlpar 
\b\f3\fs20\cf8\lang1031 \sbasedon0\snext16 Code\'fcberschrift;}}{\info{\author FernUniversit\'e4t Hagen}{\operator FernUniversit\'e4t Hagen}{\creatim\yr1997\mo7\dy17\hr17\min18}{\revtim\yr1997\mo9\dy7\hr23\min28}{\version2}{\edmins0}{\nofpages1}
{\nofwords158}{\nofchars903}{\*\company Fernuniversit\'e4t Hagen}{\vern57431}}\paperw11906\paperh16838\margl1417\margr1417\margt1417\margb1134 \deftab708\widowctrl\ftnbj\aenddoc\hyphhotz425\makebackup\linkstyles\hyphcaps0\formshade \fet0\sectd 
\linex0\headery709\footery709\colsx709\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \widctlpar \f9\fs20\lang1031 
 Man definiert zuerst eine Struktur, die ein einzelnes Feld in der Statuszeile beschreibt,  
\par  folgenderma\'dfen:
\par 
\par {\f11\cf2  struct}{\f11  STATUS_LINE_LAYOUT
\par  \{ 
\par \tab  UINT nID;
\par \tab  UINT nTyp;
\par \tab  }{\f11\cf2 int }{\f11 iXwight; 
\par  \};
\par }
\par  Danach definiert man f\'fcr jedes Feld der Statusleiste eine Struktur als Array-Element. Dieses 
\par  Array wird dann als Parameter f\'fcr die Methode {\f11 CMainFrame::SetStatusLine }verwendet.
\par  Diese Methode sieht so aus:
\par 
\par 
\par {\f11\cf2  void }{\f11 CMainFrame::SetStatusLine(STATUS_LINE_LAYOUT* slineLayoutDefault, 
\par }\pard \fi708\li708\widctlpar {\f11                    UINT nCount)
\par }\pard \widctlpar {\f11  \{
\par 
\par  \tab UINT* pIndicators = }{\f11\cf2 new}{\f11  UINT[nCount];
\par 
\par \tab }{\f11\cf2 for}{\f11 (UINT k = 0; k < nCount; k++)
\par \tab \tab pIndicators[k] =  slineLayoutDefault[k].nID;
\par 
\par \tab }{\f11\cf2 if}{\f11 ( !m_wndStatusBar.SetIndicators(pIndicators, nCount))
\par \tab \{
\par \tab \tab TRACE0("Failed to create statusbar\\n");
\par \tab \tab return;      }{\f11\cf11 // fail to create
\par }{\f11 \tab \}
\par 
\par \tab }{\f11\cf2 for}{\f11 (k = 0; k < nCount; k++)
\par \tab \{
\par \tab \tab UINT nTyp = slineLayoutDefault[k].nTyp;
\par \tab \tab UINT nID = slineLayoutDefault[k].nID;
\par \tab \tab }{\f11\cf2 int}{\f11  iX = slineLayoutDefault[k].iXwight; 
\par \tab \tab m_wndStatusBar.SetPaneInfo(k, nID, nTyp, iX);
\par 
\par \tab \}
\par \tab 
\par \tab }{\f11\cf2 delete}{\f11  [] pIndicators;
\par \tab 
\par  \}
\par }
\par  Diese Methode mu\'df man nun jedes Mal beim Aktivieren eines anderen Fensters aufrufen.
\par }